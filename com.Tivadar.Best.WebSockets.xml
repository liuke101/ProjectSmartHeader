<?xml version="1.0"?>
<doc>
    <assembly>
        <name>com.Tivadar.Best.WebSockets</name>
    </assembly>
    <members>
        <member name="T:Best.WebSockets.Implementations.WebSocketStates">
            <summary>
            States of the underlying implementation's state.
            </summary>
        </member>
        <member name="T:Best.WebSockets.Implementations.WebSocketBaseImplementation">
            <summary>
            Abstract class for concrete websocket communication implementations.
            </summary>
        </member>
        <member name="F:Best.WebSockets.Implementations.WebSocketBaseImplementation.RTTBufferCapacity">
            <summary>
            Capacity of the RTT buffer where the latencies are kept.
            </summary>
        </member>
        <member name="T:Best.WebSockets.WebSocket">
            <summary>
            Implements the WebSocket standard for duplex, two-way communications.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocket.MaxFragmentSize">
            <summary>
            Maximum payload size of a websocket frame. Its default value is 32 KiB.
            </summary>
        </member>
        <member name="P:Best.WebSockets.WebSocket.IsOpen">
            <summary>
            The connection to the WebSocket server is open.
            </summary>
        </member>
        <member name="P:Best.WebSockets.WebSocket.BufferedAmount">
            <summary>
            Data waiting to be written to the wire.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocket.OnOpen">
            <summary>
            Called when the connection to the WebSocket server is established.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocket.OnMessage">
            <summary>
            Called when a new textual message is received from the server.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocket.OnBinary">
            <summary>
            Called when a Binary message received. 
            The content of the <see cref="T:Best.HTTP.Shared.PlatformSupport.Memory.BufferSegment"/> must be used or copied to a new array in the callbacks because the plugin reuses the memory immediately after the callback by placing it back to the <see cref="T:Best.HTTP.Shared.PlatformSupport.Memory.BufferPool"/>!
            </summary>
            <remarks>Note that the memory will be reused when this event returns. Either process it in this call or make a copy from the received data.</remarks>
        </member>
        <member name="F:Best.WebSockets.WebSocket.OnClosed">
            <summary>
            Called when the WebSocket connection is closed.
            </summary>
        </member>
        <member name="P:Best.WebSockets.WebSocket.Context">
            <summary>
            Logging context of this websocket instance.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocket.implementation">
            <summary>
            The underlying, real implementation.
            </summary>
        </member>
        <member name="M:Best.WebSockets.WebSocket.#ctor(System.Uri)">
            <summary>
            Creates a WebSocket instance from the given uri.
            </summary>
            <param name="uri">The uri of the WebSocket server</param>
        </member>
        <member name="M:Best.WebSockets.WebSocket.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Creates a WebSocket instance from the given uri, protocol and origin.
            </summary>
            <param name="uri">The uri of the WebSocket server</param>
            <param name="origin">Servers that are not intended to process input from any web page but only for certain sites SHOULD verify the |Origin| field is an origin they expect.
            If the origin indicated is unacceptable to the server, then it SHOULD respond to the WebSocket handshake with a reply containing HTTP 403 Forbidden status code.</param>
            <param name="protocol">The application-level protocol that the client want to use(eg. "chat", "leaderboard", etc.). Can be null or empty string if not used.</param>
            <param name="extensions">Optional <see cref="!:IExtension"/> implementations</param>
        </member>
        <member name="M:Best.WebSockets.WebSocket.Open">
            <summary>
            Start the opening process.
            </summary>
            <remarks>It's a non-blocking call. To get notified when the WebSocket instance is considered open and can send/receive, use the <see cref="F:Best.WebSockets.WebSocket.OnOpen"/> event.</remarks>
        </member>
        <member name="M:Best.WebSockets.WebSocket.Send(System.String)">
            <summary>
            It will send the given textual message to the remote server.
            </summary>
        </member>
        <member name="M:Best.WebSockets.WebSocket.Send(System.Byte[])">
            <summary>
            It will send the given binary message to the remote server.
            </summary>
        </member>
        <member name="M:Best.WebSockets.WebSocket.Send(System.Byte[],System.UInt64,System.UInt64)">
            <summary>
            It will send the given binary message to the remote server.
            </summary>
        </member>
        <member name="M:Best.WebSockets.WebSocket.SendAsBinary(Best.HTTP.Shared.PlatformSupport.Memory.BufferSegment)">
            <summary>
            Will send the data in one or more binary frame and takes ownership over it calling BufferPool.Release when the data sent.
            </summary>
        </member>
        <member name="M:Best.WebSockets.WebSocket.SendAsText(Best.HTTP.Shared.PlatformSupport.Memory.BufferSegment)">
            <summary>
            Will send data as a text frame and takes owenership over the memory region releasing it to the BufferPool as soon as possible.
            </summary>
        </member>
        <member name="M:Best.WebSockets.WebSocket.Close">
            <summary>
            It will initiate the closing of the connection to the server.
            </summary>
        </member>
        <member name="M:Best.WebSockets.WebSocket.Close(Best.WebSockets.WebSocketStatusCodes,System.String)">
            <summary>
            It will initiate the closing of the connection to the server sending the given code and message.
            </summary>
        </member>
        <member name="T:Best.WebSockets.WebSocketStatusCodes">
            <summary>
            <see href="http://tools.ietf.org/html/rfc6455#section-7.4.1"/>
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.NormalClosure">
            <summary>
            Indicates a normal closure, meaning that the purpose for which the connection was established has been fulfilled.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.GoingAway">
            <summary>
            Indicates that an endpoint is "going away", such as a server going down or a browser having navigated away from a page.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.ProtocolError">
            <summary>
            Indicates that an endpoint is terminating the connection due to a protocol error.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.WrongDataType">
            <summary>
            Indicates that an endpoint is terminating the connection because it has received a type of data it cannot accept
            (e.g., an endpoint that understands only text data MAY send this if it receives a binary message).
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.Reserved">
            <summary>
            Reserved. The specific meaning might be defined in the future.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.NoStatusCode">
            <summary>
            A reserved value and MUST NOT be set as a status code in a Close control frame by an endpoint.
            It is designated for use in applications expecting a status code to indicate that no status code was actually present.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.ClosedAbnormally">
            <summary>
            A reserved value and MUST NOT be set as a status code in a Close control frame by an endpoint.
            It is designated for use in applications expecting a status code to indicate that the connection was closed abnormally, e.g., without sending or receiving a Close control frame.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.DataError">
            <summary>
            Indicates that an endpoint is terminating the connection because it has received data within a message that was not consistent with the type of the message (e.g., non-UTF-8 [RFC3629] data within a text message).
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.PolicyError">
            <summary>
            Indicates that an endpoint is terminating the connection because it has received a message that violates its policy.
            This is a generic status code that can be returned when there is no other more suitable status code (e.g., 1003 or 1009) or if there is a need to hide specific details about the policy.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.TooBigMessage">
            <summary>
            Indicates that an endpoint is terminating the connection because it has received a message that is too big for it to process.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.ExtensionExpected">
            <summary>
            Indicates that an endpoint (client) is terminating the connection because it has expected the server to negotiate one or more extension, 
            but the server didn't return them in the response message of the WebSocket handshake.
            The list of extensions that are needed SHOULD appear in the /reason/ part of the Close frame. Note that this status code is not used by the server, because it can fail the WebSocket handshake instead.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.WrongRequest">
            <summary>
            Indicates that a server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.
            </summary>
        </member>
        <member name="F:Best.WebSockets.WebSocketStatusCodes.TLSHandshakeError">
            <summary>
            A reserved value and MUST NOT be set as a status code in a Close control frame by an endpoint.  It is designated for use in applications expecting a status code to indicate that the connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified).
            </summary>
        </member>
        <member name="T:UnitySourceGeneratedAssemblyMonoScriptTypes_v1.MonoScriptData">
            <summary>
            Data is UTF-8 encoded strings
            </summary>
        </member>
    </members>
</doc>
